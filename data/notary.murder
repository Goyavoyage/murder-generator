
category Money
begin
  translation fr "Finance"
  translation en "Money"
  translation eo "Monaĵoj"
end

declare attribute Richness
begin
  category Money
end

attribute Richness Rich
begin
  translation fr:adj "riche"
  translation en:adj "rich"
  translation eo:adj "riĉa"
end

attribute Richness Neutral

attribute Richness Poor
begin
  translation fr:adj "pauvre"
  translation en:adj "poor"
  translation eo:adj "malriĉa"
end

element Heritage
begin
  let P be player
  let any other player be with contact FamilyMember to P not as Parent or Sibling

  provide compatible attribute Richness to P as Rich

  (* TODO: provide event SuccessionFromParents to P *)
end

element SharedHeritage
begin
  let A be player with contact FamilyMember to B as Sibling
  let B be player with contact FamilyMember to A as Sibling
  let any other player be with contact FamilyMember to A not as Parent or Sibling
                          with contact FamilyMember to B not as Parent or Sibling

  provide compatible attribute Richness to A as Rich
  provide compatible attribute Richness to B as Rich

  (* TODO: provide event SharedSuccessionFromParents to A and B *)
end

element DwarfFocusedTheirLifeAtAccumulatingGold
begin
  let P be player with attribute Specy as Dwarf

  provide compatible attribute Richness to P as Rich

  (* TODO: provide event AccumulateMoney to P *)
end


declare contact FinancialDebt
begin
  category Money
end

contact FinancialDebt Small
begin
  translation fr:adj:fem "petite"
  translation fr:adj:mas "petit"
  translation en:adj "small"
  translation eo:adj "malgranda"
end

contact FinancialDebt Large
begin
  translation fr:adj:fem "grande"
  translation fr:adj:mas "grand"
  translation en:adj "large"
  translation eo:adj "granda"
end

contact FinancialDebt Old
begin
  (* Large but from the old times: it would be awkward to require it now. *)
  translation fr:adj:fem "vielle"
  translation fr:adj:mas "vieux"
  translation en:adj "old"
  translation eo:adj "malnova"
end

element CausalDebt
begin
  let A be player with attribute Richness as Neutral
                  with contact Know to B as True
  let B be player with attribute Richness as Neutral
                  with contact Know to A as True

  provide compatible contact FinancialDebt from A to B as Small

  provide relation between A and B as asymmetrical trust neutral

  (* TODO: provide event to A *)
  (* TODO: provide event to B *)
end

element SmallDebtNeutralPoor
begin
  let A be player with attribute Richness as Poor
  let B be player with attribute Richness as Neutral
                  with contact Know to A as True

  provide compatible contact FinancialDebt from A to B as Small

  provide relation between A and B as asymmetrical avoidance undetermined
  provide compatible contact Know from A to B as True

  (* TODO: provide event to A *)
  (* TODO: provide event to B *)
end

element RichPaysItsDebt
begin
  let A be player with attribute Richness as Rich
                  with contact Know to B as True
  let B be player

  provide contact FinancialDebt from A to B as Large

  provide relation between A and B as asymmetrical neutral undetermined
  provide compatible contact Know from B to A as True

  (* TODO: provide event to A *)
  (* TODO: provide event to B *)
end

element TookMoneyToBuildAShopAndIsNowRich
begin
  let A be player with attribute Richness as Neutral
  let B be player

  (* provide event to A (* TODO: Money exchange *) *)
  (* provide event to B (* TODO: Money exchange *) *)

  provide contact FinancialDebt from B to A as Old
  provide attribute Richness to B as Rich
  provide attribute Job to B as Seller

  provide relation between B and A as asymmetrical trust undetermined
  provide compatible contact Know between B and A as True

  (* provide event to B (* TODO: Got rich after the shop got working *) *)
end

element TookMoneyToBuildAShopButGotBankrupt
begin
  let A be player with attribute Richness as Neutral
  let B be player

  (* provide event to A TODO: Money exchange *)
  (* provide event to B TODO: Money exchange *)

  provide contact FinancialDebt from B to A as Large
  provide attribute Richness to B as Poor
  provide attribute Job to B as Seller

  provide relation between B and A as asymmetrical avoidance hate
  provide compatible contact Know between B and A as True

  (* provide event to B (* TODO: Got bankrupt *) *)
end

element ImportantSeller
begin
  let P be player

  provide compatible attribute Richness to P as Rich
  provide compatible attribute Job to P as Seller

  (* provide event to P (* TODO *) *)
end

element DecidedToDisappearAfterLotsOfDebts
begin
  let A be player with contact FinancialDebt to B as Large
  let B be player

  provide attribute Famousness to A as Hidden

  (* provide event to A (* TODO *) *)
end


declare contact Favor

contact Favor Large
begin
  translation fr:adj:fem "grande"
  translation fr:adj:mas "grand"
  translation en:adj "large"
  translation eo:adj "granda"
end

contact Favor Small
begin
  translation fr:adj:fem "petite"
  translation fr:adj:mas "petit"
  translation en:adj "small"
  translation eo:adj "malgranda"

  compatible with Large
end

element FinancialDebtSmallFavor
begin
  let A be player with contact FinancialDebt to B as Small
  let B be player

  provide compatible contact Favor from A to B as Small
end

element FinancialDebtLargeFavor
begin
  let A be player with contact FinancialDebt to B as Large
  let B be player

  provide compatible contact Favor from A to B as Large
end


