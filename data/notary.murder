
category money
begin
  :fr "finance"
  :en "money"
  :eo "monaĵoj"
end

declare attribute richness
begin
  category money
end

attribute richness Rich
begin
  :fr:adj "riche"
  :en:adj "rich"
  :eo:adj "riĉa"
end

attribute richness Neutral

attribute richness Poor
begin
  :fr:adj "pauvre"
  :en:adj "poor"
  :eo:adj "malriĉa"
end

element heritage
begin
  let P be player

  provide attribute richness to P as Rich

  provide event to P (* TODO *)
end


declare contact financialDebt
begin
  category money
end

contact financialDebt Small
begin
  :fr:adj:fem "petite"
  :fr:adj:mas "petit"
  :en:adj "small"
  :eo:adj "malgranda"
end

contact financialDebt Large
begin
  :fr:adj:fem "grande"
  :fr:adj:mas "grand"
  :en:adj "large"
  :eo:adj "granda"
end

contact financialDebt Old
begin
  (* Large but from the old times: it would be awkward to require it now. *)
  :fr:adj:fem "vielle"
  :fr:adj:mas "vieux"
  :en:adj "old"
  :eo:adj "malnova"
end

element CausalDebt
begin
  let A be player with attribute richness as Neutral
                  with contact known to B as True
  let B be player with attribute richness as Neutral
                  with contact known to A as True

  provide contact financialDebt from A to B as Small

  provide relation between A and B as Asymmetrical Trust Neutral

  provide event to A (* TODO *)
  provide event to B (* TODO *)
end

element SmallDebtNeutralPoor
begin
  let A be player with attribute richness as Poor
  let B be player with attribute richness as Neutral
                  with contact known to B as True

  provide contact financialDebt from A to B as Small

  provide relation between A and B as Asymmetrical Avoidance Undetermined
  provide contact known from A to B as True

  provide event to A (* TODO *)
  provide event to B (* TODO *)
end

element RichPaysItsDebt
begin
  let A be player with attribute richness as Rich
                  with contact known to B as True
  let B be player

  provide contact financialDebt from A to B as Large

  provide relation between A and B as Asymmetrical Neutral Undetermined
  provide contact known from B to A as True

  provide event to A (* TODO *)
  provide event to B (* TODO *)
end

element TookMoneyToBuildAShopAndIsNowRich
begin
  let A be player with attribute richness as Neutral
  let B be player

  provide event to A (* TODO: Money exchange *)
  provide event to B (* TODO: Money exchange *)

  provide contact financialDebt from B to A as Old
  provide attribute richness to B as Rich
  provide attribute job to B as Seller

  provide relation between B and A as Asymmetrical Trust Undetermined
  provide contact known from B to A as True
  provide contact known from A to B as True

  provide event to B (* TODO: Got rich after the shop got working *)
end

element TookMoneyToBuildAShopButGotBankrupt
begin
  let A be player with attribute richness as Neutral
  let B be player

  provide event to A (* TODO: Money exchange *)
  provide event to B (* TODO: Money exchange *)

  provide contact financialDebt from B to A as Large
  provide attribute richness to B as Poor
  provide attribute job to B as Seller

  provide relation between B and A as Asymmetrical Avoidance Hate
  provide contact known from B to A as True
  provide contact known from A to B as True

  provide event to B (* TODO: Got bankrupt *)
end

element ImportantSeller
begin
  let P be player

  provide attribute richness to B as Rich
  provide attribute job to B as Seller

  provide event to P (* TODO *)
end


declare contact favor

contact favor Small
begin
  :fr:adj:fem "petite"
  :fr:adj:mas "petit"
  :en:adj "small"
  :eo:adj "malgranda"
end

contact favor Large
begin
  :fr:adj:fem "grande"
  :fr:adj:mas "grand"
  :en:adj "large"
  :eo:adj "granda"
end

element FinancialDebtSmallFavor
begin
  let A be player with contact financialDebt to B as Small
  let B be player

  provide contact favor from A to B as Small
end

element FinancialDebtLargeFavor
begin
  let A be player with contact financialDebt to B as Large
  let B be player

  provide contact favor from A to B as Large
end

